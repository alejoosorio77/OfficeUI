/* ====================================================================================================
 * Filename:      OfficeUI.Mixins.scss
 * Author:        Kevin De Coninck
 * Date Created:  30/03/2015
 * Media:         Screen
 * ----------------------------------------------------------------------------------------------------
 * Notes:         The OfficeUI.Mixins.scss file is a file contains various mixins that can be used with
 *                the scss syntax.
======================================================================================================= */

/* ====================================================================================================
 * Mixin:         Font-Size (REM) mixin).
 *
 * Description:   REM is similar to the EM value, but instead of being relative to the parent element
 *                it's relative to the font-size set in the <HTML> tag.
 *                It has all the benefits of EM, but you don't get issues e.g. (Compounding) since REM
 *                is only relative to the HTML element. The bad part is there's no support for REM
 *                units in Microsoft Internet Explorer 8 and below. But with this mixin we can create
 *                a fallback to pixels when rem isn't supported.
 *
 * Usage:         p { @include font-size(14px); }
 *
 * Output:        p {
 *                    font-size: 14px; //Will be overridden if browser supports rem
 *                    font-size: 0.8rem;
 *                  }
 * ==================================================================================================== */

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/* ---- Useful mixins. ---- */
@mixin square-box($dimensions) { width: $dimensions; height: $dimensions; }
@mixin border-radius($radius) { -moz-border-radius: $radius; -ms-border-radius: $radius; -o-border-radius: $radius; -webkit-border-radius: $radius; border-radius: $radius; }
@mixin no-select { -moz-user-select: none; -ms-user-select: none; -webkit-touch-callout: none; -webkit-user-select: none; cursor: default; user-select: none; }

/* -- Positioning mixins. -- */
@mixin top-left-position($top, $left) { top: $top; left: $left; }

/* -- Transformation mixins. -- */
@mixin transform-scale($scale) { -moz-transform: scale($scale); -ms-transform: scale($scale); -o-transform: scale($scale); -webkit-transform: scale($scale); transform: scale($scale); }

/* ---- Animation mixins. ---- */
@mixin animation-duration($time) { -moz-animation-duration: $time; -ms-animation-duration: $time; -o-animation-duration: $time; -webkit-animation-duration: $time; animation-duration: $time; }
@mixin animation-delay($time) { -moz-animation-delay: $time; -ms-animation-delay: $time; -o-animation-delay: $time; -webkit-animation-delay: $time; animation-delay: $time; }
@mixin animation-name ($name) { -moz-animation-name: $name; -ms-animation-name: $name; -o-animation-name: $name; -webkit-animation-name: $name; animation-name: $name; }
@mixin animation-iteration-infinite { -moz-animation-iteration-count: infinite; -ms-animation-iteration-count: infinite; -o-animation-iteration-count: infinite; -webkit-animation-iteration-count: infinite; animation-iteration-count: infinite; }
@mixin animation-no-repeat { -webkit-animation-fill-mode: forwards; -moz-animation-fill-mode: forwards; animation-fill-mode: forwards; }
@mixin animation-direction-normal { -moz-animation-direction: normal; -ms-animation-direction: normal; -o-animation-direction: normal; -webkit-animation-direction: normal; animation-direction: normal; }
@mixin keyframes($name) { @-moz-keyframes #{$name} { @content; } @-ms-keyframes #{$name} { @content; } @-o-keyframes #{$name} { @content; } @-webkit-keyframes #{$name} { @content; } @keyframes #{$name} { @content; }}






































